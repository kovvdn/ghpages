{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/pages/index.js","webpack:///./src/components/menu.js","webpack:///./src/components/UI/container.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Post","_ref","post","react_default","a","createElement","frontmatter","title","date","excerpt","gatsby_browser_entry","to","fields","slug","IndexPage","data","layout","allMarkdownRemark","edges","map","_ref2","node","postCard","key","id","PostsQuery","MenuWrapper","styled","ul","withConfig","displayName","componentId","MenuItem","li","Menu","Container","div","enter","keyframes","leave","HeaderWrapper","isIndexPage","HeaderContainer","extend","_templateObject","Header","componentDidUpdate","prevProps","prevState","console","log","render","_this$props","this","props","siteTitle","billboard","pathname","location","style","margin","color","textDecoration","menu","gatsby_image_default","position","top","left","width","height","fluid","Component","ContentContainer","layout_templateObject","Layout","children","query","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","es","header","file","childImageSharp","_3730400611","propTypes","PropTypes","isRequired"],"mappings":"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","file":"component---src-pages-index-js-eac659ecbcf93f0c7af6.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Post = ({ post }) => (\n  <article>\n    <h3>{post.frontmatter.title}</h3>\n    <span>{post.frontmatter.date}</span>\n    <p>{post.excerpt}</p>\n    <Link to={post.fields.slug}>Go!</Link>\n  </article>\n)\n\nexport default Post\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport PostCard from '../components/postCard'\n\nimport Layout from '../components/layout'\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <h2>Latest Posts:</h2>\n    {data.allMarkdownRemark.edges.map(({ node }) => (\n      <PostCard key={node.id} post={node} />\n    ))}\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const PostsQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            author\n            date\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst MenuWrapper = styled.ul`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n`\n\nconst MenuItem = styled.li`\n  font-size: 18px;\n  font-weight: 500;\n  > a {\n    display: block;\n    padding: 10px;\n    font-family: sans-serif;\n    text-decoration: none;\n    color: #fff;\n    text-shadow: 1px 1px 10px #000;\n  }\n`\n\nconst Menu = () => (\n  <nav>\n    <MenuWrapper>\n      <MenuItem>\n        <Link to=\"/\">Home</Link>\n      </MenuItem>\n      <MenuItem>\n        <Link to=\"/about\">About</Link>\n      </MenuItem>\n    </MenuWrapper>\n  </nav>\n)\n\nexport default Menu\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n`\n\nexport default Container\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\n\nimport Img from 'gatsby-image'\nimport Menu from './menu'\n\nimport styled, { keyframes } from 'styled-components'\n\nimport Container from './UI/container'\n\nconst enter = keyframes`\n  from {\n    height: 20vh\n  } \n  to {\n    height: 60vh\n  }\n`\n\nconst leave = keyframes`\n  from {\n    height: 60vh\n  } \n  to {\n    height: 20vh\n  }\n`\n\nconst HeaderWrapper = styled.div`\n  background: #323232;\n  position: relative;\n  overflow: hidden;\n  height: ${({ isIndexPage }) => (isIndexPage ? '60vh' : '20vh')};\n  animation: ${({ isIndexPage }) => (isIndexPage ? enter : leave)} 0.3s ease;\n`\n\nconst HeaderContainer = Container.extend`\n  padding: 1.45rem 1.0875rem;\n  position: relative;\n  z-index: 2;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nclass Header extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    console.log('test')\n  }\n  render() {\n    const {\n      siteTitle,\n      billboard,\n      location: { pathname },\n    } = this.props\n    return (\n      <HeaderWrapper isIndexPage={pathname === '/'}>\n        <HeaderContainer>\n          <h1 style={{ margin: 0 }}>\n            <Link\n              to=\"/\"\n              style={{\n                color: 'white',\n                textDecoration: 'none',\n              }}\n            >\n              {siteTitle}\n            </Link>\n          </h1>\n          <Menu />\n        </HeaderContainer>\n        <Img\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n          }}\n          fluid={billboard}\n        />\n      </HeaderWrapper>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport { Location } from '@reach/router'\n\nimport Header from './header'\nimport './layout.css'\n\nimport Container from './UI/container'\n\nconst ContentContainer = Container.extend`\n  padding: 0px 1.0875rem 1.45rem;\n  padding-top: 0;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n        file(id: { eq: \"0d8dba97-7c4c-5ff7-9281-27f4e357571b\" }) {\n          name\n          childImageSharp {\n            fluid(maxWidth: 1440) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Location>\n          {({ location }) => (\n            <Header\n              siteTitle={data.site.siteMetadata.title}\n              billboard={data.file.childImageSharp.fluid}\n              location={location}\n            />\n          )}\n        </Location>\n\n        <ContentContainer>{children}</ContentContainer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}